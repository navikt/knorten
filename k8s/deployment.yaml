apiVersion: apps/v1
kind: Deployment
metadata:
  name: knorten
  namespace: knada-system
  labels:
    app: knorten
spec:
  replicas: 2
  selector:
    matchLabels:
      app: knorten
  template:
    metadata:
      labels:
        app: knorten
    spec:
      serviceAccountName: knorten
      imagePullSecrets:
      - name: ghcr-credentials
      containers:
      - name: knorten
        image: europe-west1-docker.pkg.dev/knada-gcp/knada/knorten
        ports:
        - containerPort: 8080
        env:
          - name: "HOSTNAME"
            value: "knorten.knada.io"
          - name: "GIN_MODE"
            value: "release"
          - name: AIRFLOW_CHART_VERSION
            valueFrom:
              configMapKeyRef:
                name: helm-repos
                key: airflow_chart_version
          - name: JUPYTER_CHART_VERSION
            valueFrom:
              configMapKeyRef:
                name: helm-repos
                key: jupyter_chart_version
          - name: AIRFLOW_EGRESS_NETPOL
            value: /root/.config/netpol/default-egress-airflow-worker.yaml
          - name: "KNELM_IMAGE"
            value: europe-west1-docker.pkg.dev/knada-gcp/knada/knelm:2023-03-15-3c6e024
          - name: ADMIN_GROUP
            value: nada@nav.no
        envFrom:
        - secretRef:
            name: knorten
        volumeMounts:
          - name: helm-repos-config
            mountPath: /root/.config/helm/repositories.yaml
            subPath: repositories.yaml
          - name: airflow-network-policy
            mountPath: /root/.config/netpol/default-egress-airflow-worker.yaml
            subPath: default-egress-airflow-worker.yaml
      - name: cloudsql-proxy
        command:
        - /cloud-sql-proxy
        - --max-sigterm-delay=30s
        - --address=0.0.0.0
        - --port=5432
        - knada-gcp:europe-west1:knorten
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.1-alpine
        ports:
        - containerPort: 5432
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 2
          runAsNonRoot: true
          runAsUser: 2
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
        - name: helm-repos-config
          configMap:
            name: helm-repos
        - name: airflow-network-policy
          configMap:
            name: airflow-network-policy
