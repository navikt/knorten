// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0

package gensql

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AppDelete(ctx context.Context, arg AppDeleteParams) error
	AppsForTeamGet(ctx context.Context, teamID string) ([]ChartType, error)
	ClearPendingUpgradeLocks(ctx context.Context) error
	ComputeInstanceCreate(ctx context.Context, arg ComputeInstanceCreateParams) error
	ComputeInstanceDelete(ctx context.Context, teamID string) error
	ComputeInstanceGet(ctx context.Context, teamID string) (ComputeInstance, error)
	EventCreate(ctx context.Context, arg EventCreateParams) error
	EventGet(ctx context.Context, id uuid.UUID) (Event, error)
	EventLogCreate(ctx context.Context, arg EventLogCreateParams) error
	EventLogsForEventGet(ctx context.Context, eventID uuid.UUID) ([]EventLog, error)
	EventSetDeadline(ctx context.Context, arg EventSetDeadlineParams) error
	EventSetStatus(ctx context.Context, arg EventSetStatusParams) error
	EventsGetNew(ctx context.Context) ([]Event, error)
	EventsGetOverdue(ctx context.Context) ([]Event, error)
	EventsGetPending(ctx context.Context) ([]Event, error)
	GlobalValueDelete(ctx context.Context, arg GlobalValueDeleteParams) error
	GlobalValueGet(ctx context.Context, arg GlobalValueGetParams) (ChartGlobalValue, error)
	GlobalValueInsert(ctx context.Context, arg GlobalValueInsertParams) error
	GlobalValuesGet(ctx context.Context, chartType ChartType) ([]ChartGlobalValue, error)
	SessionCreate(ctx context.Context, arg SessionCreateParams) error
	SessionDelete(ctx context.Context, token string) error
	SessionGet(ctx context.Context, token string) (Session, error)
	SupportedComputeMachineTypes(ctx context.Context) ([]string, error)
	TeamCreate(ctx context.Context, arg TeamCreateParams) error
	TeamDelete(ctx context.Context, id string) error
	TeamGet(ctx context.Context, slug string) (TeamGetRow, error)
	TeamSetAirflowRestrictEgress(ctx context.Context, arg TeamSetAirflowRestrictEgressParams) error
	TeamSetApiAccess(ctx context.Context, arg TeamSetApiAccessParams) error
	TeamSetPendingAirflowUpgrade(ctx context.Context, arg TeamSetPendingAirflowUpgradeParams) error
	TeamSetPendingJupyterUpgrade(ctx context.Context, arg TeamSetPendingJupyterUpgradeParams) error
	TeamUpdate(ctx context.Context, arg TeamUpdateParams) error
	TeamValueDelete(ctx context.Context, arg TeamValueDeleteParams) error
	TeamValueGet(ctx context.Context, arg TeamValueGetParams) (ChartTeamValue, error)
	TeamValueInsert(ctx context.Context, arg TeamValueInsertParams) error
	TeamValuesGet(ctx context.Context, arg TeamValuesGetParams) ([]ChartTeamValue, error)
	TeamsForAppGet(ctx context.Context, chartType ChartType) ([]string, error)
	TeamsForUserGet(ctx context.Context, email string) ([]TeamsForUserGetRow, error)
	TeamsGet(ctx context.Context) ([]Team, error)
}

var _ Querier = (*Queries)(nil)
