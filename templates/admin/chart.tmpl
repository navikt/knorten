{{ define "admin/chart" }}
    {{ template "head" . }}
    <article class="bg-white rounded-md p-4 flex flex-col gap-2">
        <h2>Rediger globale {{ .chart }} verdier</h2>
        {{ with .errors }}
            {{ . }}
        {{ end }}
        <form action="" method="POST">
            <fieldset>
                <div id="values"></div>
                <div>
                    <button type="button"
                            class="mb-4 navds-button navds-button--secondary navds-button--small"
                            onClick="addNewElement()"
                    >
                        <span class="navds-label">Nytt felt</span>
                    </button>
                </div>
            </fieldset>
            <div class="pure-controls">
                <button type="submit"
                        class="navds-button navds-button--primary bg-surface-action"
                >
                    <span class="navds-label">Lagre</span>
                </button>
            </div>
        </form>
    </article>

    <script>
        let inputCounter = 0

        function deleteRow(event) {
            const valuesDiv = document.getElementById("values");
            valuesDiv.removeChild(event.target.parentElement.parentElement.parentElement)
        }

        function addNewElement() {
            const valuesDiv = document.getElementById("values");
            valuesDiv.insertAdjacentHTML("beforeend",
                `<div class="mb-4 flex flex-col gap-2">
                    <input
                        class="navds-text-field__input navds-body-short navds-body-medium" 
                        type="text"
                        name="key.${inputCounter}"
                        id="key.${inputCounter}"
                        placeholder="key"
                    />
                    <div class="flex items-center gap-2">
                        <input
                            class="navds-text-field__input navds-body-short navds-body-medium"
                            type="text"
                            name="value.${inputCounter}"
                            id="value.${inputCounter}"
                            placeholder="value"
                        />
                        <div class="navds-checkbox navds-checkbox--small">
                            <input
                                type="checkbox"
                                name="value.${inputCounter}"
                                id="value.${inputCounter}"
                                class="navds-checkbox__input"
                            />
                            <label
                                class="navds-checkbox__label"
                                for="encrypt.${inputCounter}"
                            >
                                <span class="navds-checkbox__content">
                                    Encrypt
                                </span>
                            </label>
                        </div>
                        <button type="button" onclick="deleteRow(event)" class="navds-button navds-button--secondary">
                                <span class="navds-label">Slett</span>
                        </button>
                    </div>
                </div>`
            );
            inputCounter += 1;
        }

        function addElement(key, value, encrypted) {
            const valuesDiv = document.getElementById("values")
            const keyValueDiv = document.createElement("div");
            keyValueDiv.setAttribute("class", "mb-4")

            const label = document.createElement("label");
            label.setAttribute("class", "navds-form-field__label navds-label")
            label.innerText = key;
            keyValueDiv.appendChild(label);

            const valueDiv = document.createElement("div");
            valueDiv.setAttribute("class", "flex gap-2");

            var valueInput = document.createElement("input");
            valueInput.setAttribute("class", "navds-text-field__input navds-body-short navds-body-medium");
            valueInput.setAttribute("type", "text");
            valueInput.setAttribute("name", key);
            valueInput.setAttribute("id", key);
            valueInput.setAttribute("value", value);
            valueDiv.appendChild(valueInput);

            const encryptDiv = document.createElement("div");
            encryptDiv.setAttribute("class", "navds-checkbox flex gap-2 m-auto navds-checkbox--small");
            
            const encryptCheckbox = document.createElement("input");
            encryptCheckbox.setAttribute("class", "navds-checkbox__content cursor-pointer");
            encryptCheckbox.setAttribute("name", key);
            if (encrypted) {
                encryptCheckbox.setAttribute("checked", "checked");
            }
            encryptCheckbox.setAttribute("id", key);
            encryptCheckbox.setAttribute("type", "checkbox");
            encryptCheckbox.setAttribute("label", "Encrypt");

            const encryptLabel = document.createElement("label");
            encryptLabel.setAttribute("class", "navds-form-field__label navds-label");
            encryptLabel.setAttribute("for", key);

            const encryptSpan = document.createElement("span");
            encryptSpan.setAttribute("class", "navds-checkbox__content font-normal");
            encryptSpan.innerText = "Encrypt";
            encryptLabel.appendChild(encryptSpan);

            encryptDiv.appendChild(encryptCheckbox);
            encryptDiv.appendChild(encryptLabel);

            const delButton = document.createElement("button");
            delButton.setAttribute("class", "navds-button navds-button--secondary");
            delButton.setAttribute("type", "button");
            delButton.setAttribute("onclick", "deleteRow(event)");
            const delLabel = document.createElement("span");
            delLabel.setAttribute("class", "navds-label");
            delLabel.innerText = "Slett";
            delButton.appendChild(delLabel);

            valueDiv.appendChild(encryptDiv);
            valueDiv.appendChild(delButton);
            keyValueDiv.appendChild(valueDiv);
            valuesDiv.appendChild(keyValueDiv);
        }

        {{ range .values }}
        addElement("{{ .Key }}", "{{ .Value }}", {{ .Encrypted }})
        {{ end }}
    </script>
    {{ template "footer" }}
{{ end }}
