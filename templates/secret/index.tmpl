{{ define "secrets/index" }}
    {{ template "head" . }}
    <article class="bg-white rounded-md p-4">
        <h2 class="pb-4">Hemmeligheter</h2>
        <p class="flex items-center gap-4 pb-4">
            Her kan du definere grupper med hemmeligheter som vil lagres i google secret manager og synkes ut i
            clusteret som kubernetes secrets i team namespacet deres. Disse kubernetes secretene kan du så velge 
            å mounte inn og sette som miljøvariabler Airflow worker pods.
        </p>
        {{ with .errors }}
            {{ . }}
        {{ end }}
        <button id="new-group-button"  onClick="addNewGroup()" class="mb-4 navds-button navds-button--primary navds-button--small">
            <span class="navds-label">Ny gruppe</span>
        </button>
    </article>

    <script>
        let groupCounter = 0;
        const groupCounterMap = new Map();

        function addNewGroup() {
            const groupID = addGroup()
            addElement(groupID)
        }

        function addGroup(name = undefined, nameReadOnly = false) {
            groupCounter += 1
            const groupCount = groupCounter
            if (name === undefined) {
                name = "ny-gruppe-"+groupCount
            }

            groupCounterMap[groupCount] = {"name": name, "secretCount": 0}

            var groupInput = document.createElement("input");
            groupInput.setAttribute("class", "cursor-default outline-none");
            groupInput.setAttribute("id", "new-group-title-"+groupCount);
            groupInput.setAttribute("value", groupCounterMap[groupCount].name);
            groupInput.setAttribute("onchange", "updateNewGroupName("+groupCount+", this.value)")
            groupInput.readOnly = nameReadOnly;

            var groupForm = document.createElement("form");
            groupForm.setAttribute("id", "form-"+groupCount);
            groupForm.setAttribute("class", "mb-4 border-solid border-2 p-2");
            groupForm.setAttribute("method", "POST");
            groupForm.setAttribute("action", "/team/{{ .slug }}/secrets/"+groupCounterMap[groupCount].name);

            var groupFieldset = document.createElement("fieldset");

            var valuesDiv = document.createElement("div");
            valuesDiv.setAttribute("id", "values-"+groupCount);
            groupFieldset.appendChild(valuesDiv);

            var newElementButtonDiv = document.createElement("div");
            var newElementButton = document.createElement("button");
            newElementButton.setAttribute("type", "button");
            newElementButton.setAttribute("class", "mb-4 navds-button navds-button--secondary navds-button--small");
            newElementButton.setAttribute("onclick", "addElement("+groupCount+")");
            newElementButtonDiv.appendChild(newElementButton);

            var newElementButtonSpan = document.createElement("span");
            newElementButtonSpan.setAttribute("class", "navds-label");
            newElementButtonSpan.innerText = "Nytt felt";
            newElementButton.appendChild(newElementButtonSpan);
            groupFieldset.appendChild(newElementButtonDiv);

            groupForm.appendChild(groupFieldset);

            var submitButtonDiv = document.createElement("div");
            submitButtonDiv.setAttribute("class", "pure-controls");

            var submitButton = document.createElement("button");
            submitButton.setAttribute("type", "submit");
            submitButton.setAttribute("class", "navds-button navds-button--primary bg-surface-action");

            var submitButtonSpan = document.createElement("span");
            submitButtonSpan.setAttribute("class", "navds-label");
            submitButtonSpan.innerText = "Lagre";

            submitButtonDiv.appendChild(submitButton);
            submitButton.appendChild(submitButtonSpan);

            groupForm.appendChild(submitButtonDiv);

            const newGroupButton = document.getElementById("new-group-button");
            newGroupButton.parentNode.insertBefore(groupInput, newGroupButton);
            newGroupButton.parentNode.insertBefore(groupForm, newGroupButton);

            return groupCount
        }

        function updateNewGroupName(groupID, newName) {
            groupCounterMap[groupID].name = newName
            const groupForm = document.getElementById("form-"+groupID)
            groupForm.setAttribute("action", "/team/{{ .slug }}/secrets/"+groupCounterMap[groupID].name)
        }

        function deleteRow(event, id) {
            const valueDiv = document.getElementById(id);
            valueDiv.parentNode.removeChild(valueDiv)
        }

        function addElement(groupID, key = undefined, value = undefined) {
            var keyReadOnly = true
            if (key === undefined) {
                key = ""
                value = ""
                keyReadOnly = false
            }

            groupCounterMap[groupID].secretCount += 1
            currentID = groupID+"-"+groupCounterMap[groupID].secretCount
            const valuesDiv = document.getElementById("values-"+groupID)
            const keyValueDiv = document.createElement("div");
            keyValueDiv.setAttribute("class", "mb-4")
            keyValueDiv.setAttribute("id", groupID+"-"+groupCounterMap[groupID].secretCount)

            const keyDiv = document.createElement("div");
            keyDiv.setAttribute("class", "flex gap-2");
            keyDiv.setAttribute("id", "key."+groupID+"."+groupCounterMap[groupID].secretCount);

            var keyInput = document.createElement("input");
            if (keyReadOnly) {
                keyInput.setAttribute("class", "cursor-default outline-none");
                keyInput.readOnly = true;
            } else {
                keyInput.setAttribute("class", "navds-text-field__input navds-body-short navds-body-medium mb-2");
            }
            keyInput.setAttribute("type", "text");
            keyInput.setAttribute("name", "key."+groupID+"."+groupCounterMap[groupID].secretCount);
            keyInput.setAttribute("id", "key."+groupID+"."+groupCounterMap[groupID].secretCount);
            keyInput.setAttribute("value", key);
            keyDiv.appendChild(keyInput);

            keyValueDiv.appendChild(keyDiv);

            const valueDiv = document.createElement("div");
            valueDiv.setAttribute("class", "flex gap-2");
            valueDiv.setAttribute("id", groupID+"-"+key);

            var valueInput = document.createElement("input");
            valueInput.setAttribute("class", "navds-text-field__input navds-body-short navds-body-medium");
            valueInput.setAttribute("type", "text");
            valueInput.setAttribute("name", "value."+groupID+"."+groupCounterMap[groupID].secretCount);
            valueInput.setAttribute("id", "value."+groupID+"."+groupCounterMap[groupID].secretCount);
            valueInput.setAttribute("value", value);
            valueDiv.appendChild(valueInput);

            const delButton = document.createElement("button");
            delButton.setAttribute("class", "navds-button navds-button--secondary");
            delButton.setAttribute("type", "button");
            delButton.setAttribute("onclick", "deleteRow(event, '"+currentID+"')");
            const delLabel = document.createElement("span");
            delLabel.setAttribute("class", "navds-label");
            delLabel.innerText = "Slett";
            delButton.appendChild(delLabel);

            valueDiv.appendChild(delButton);
            keyValueDiv.appendChild(valueDiv);
            valuesDiv.appendChild(keyValueDiv);
        }

        {{ range $group, $secretGroup := .secrets }}
                var groupID = addGroup({{ $group }}, true)
                {{ range $secretGroup.Secrets }}
                    addElement(groupID, "{{ .Name }}", "{{ .Value }}")
                {{ end }}
        {{ end }}
    </script>
    </article>
    {{ template "footer" }}
{{ end }}
